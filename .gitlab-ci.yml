services:
  - docker:dind

stages:
  - test
  - build
  - deploy

pylint:
  stage: test
  image: python:3.7-slim
  before_script:
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
    - pip install -r requirements.txt
    - pip install pylint_gitlab
  script:
    - pylint --exit-zero --output-format=text $(find -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > public/lint/index.html
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_TLS_CERTDIR: ""
  CONTAINER_TAGGED_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}
  CONTAINER_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}:latest

docker-build:
  stage: build
  image: docker:stable
  script:
    - docker info
    - docker pull $CONTAINER_RELEASE_IMAGE || true
    - docker build --cache-from $CONTAINER_RELEASE_IMAGE --tag $CONTAINER_TAGGED_IMAGE --tag $CONTAINER_RELEASE_IMAGE .
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker push $CONTAINER_TAGGED_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

prod:
  stage: deploy
  dependencies: []
  environment:
    name: production
  image: thisiskj/kubectl-envsubst
  variables:
    PUBLISH_PATH: /${CI_ENVIRONMENT_SLUG}/${CI_PROJECT_NAME}
  script:
    - export REGISTRY_BASIC=$(echo -n ${CI_DEPLOY_USER}:${CI_DEPLOY_PASSWORD} | base64)
    - cat ./deploy/secrets/image-pull-secret.yml | envsubst | kubectl apply -f -
    - cat ./deploy/network/service.yml | envsubst | kubectl apply -f -
    - cat ./deploy/network/ingress.yml | envsubst | kubectl apply -f -
    - cat ./deploy/deployment.yml | envsubst | kubectl apply -f -
    - echo ${PUBLISH_PATH}
